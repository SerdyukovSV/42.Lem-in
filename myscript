#!/bin/bash
printf "\e[91;1m                INVALID MAPS          \e[0m\n"
printf " ------ ---------------- ---------- \n"
printf "\e[44m| MAPS |           DESCRIPTION              |\e[0m\n"
printf " ------ ---------------- ---------- \n"
tmp="maps/invalid/*"
count=0
for var in $tmp
do
count=$(( $count + 1 ))
out=$(./lem-in < $var)
printf "%5d" $count
printf "%5s$out\n"
sleep 0.2
done
printf "\n\e[92;1m                VALID MAPS          \e[0m\n"
printf "\e[92;1m--BIG\e[0m\n"
printf " ------ ---------------- ---------- ---------\n"
printf "\e[44m| MAPS | REQUIRED LINES | MY LINES | Deviat |\e[0m\n"
printf " ------ ---------------- ---------- ---------\n"
tmp="maps/valid/big/*"
count=0
for var in $tmp
do
count=$(( $count + 1 ))
printf "%5d" $count
line1=$(sed -n 2p < "$var" | cut -d' ' -f8)
line2=$(./lem-in < $var | grep "line" | cut -d# -f2)
printf "%12s%14s" $line1 $line2
dev=$(($line1 - $line2))
if [ $dev -eq 0 ]
then
printf "     [   %d   ]\n" $dev
elif [ $dev -gt 0 ]
then
printf "     \e[92;1m[   %d   ]\e[0m\n" $dev
else
printf "     \e[91;1m[  %d   ]\e[0m\n" $dev
fi
done

printf "\n\e[92;1m--BIG-SUPERPOSITION\e[0m\n"
printf " ------ ---------------- ---------- ---------\n"
printf "\e[44m| MAPS | REQUIRED LINES | MY LINES | Deviat |\e[0m\n"
printf " ------ ---------------- ---------- ---------\n"
tmp="maps/valid/big_sup/*"
count=0
for var in $tmp
do
count=$(( $count + 1 ))
printf "%5d" $count
line1=$(sed -n 2p < "$var" | cut -d' ' -f8)
line2=$(./lem-in < $var | grep "line" | cut -d# -f2)
printf "%12s%14s" $line1 $line2
dev=$(($line1 - $line2))
if [ $dev -eq 0 ]
then
printf "     [   %d   ]\n" $dev
elif [ $dev -gt 0 ]
then
printf "     \e[92;1m[   %d   ]\e[0m\n" $dev
else
printf "     \e[91;1m[  %d   ]\e[0m\n" $dev
fi
done
